secrets:
  mysql_db:
    file: ${HOME}/nextcloud_secrets/.MYSQL_DATABASE
  mysql_user:
    file: ${HOME}/nextcloud_secrets/.MYSQL_USER
  mysql_password:
    file: ${HOME}/nextcloud_secrets/.MYSQL_PASSWORD
  mysql_root_password:
    file: ${HOME}/nextcloud_secrets/.MYSQL_ROOT_PASSWORD
#   aws_shared_credentials:
#     file: ~/.aws/secrets/aws_shared_credentials.secret
#   aws_hosted_zone_id:
#     file: ~/.aws/secrets/aws_hosted_zone_id.secret

services:
  db:
    container_name: nextcloud-db
    image: mariadb:latest
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
      MYSQL_DATABASE_FILE: /run/secrets/mysql_db
      MYSQL_USER_FILE: /run/secrets/mysql_user
    secrets:
      - mysql_root_password
      - mysql_password
      - mysql_db
      - mysql_user
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: nextcloud-cache
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - cache:/data
    networks:
      - app-network

  app:
    image: nextcloud:latest
    container_name: nextcloud
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - /etc/localtime:/etc/localtime:ro
      - ${HOME}/nextcloud_secrets:/mnt/nextcloud_secrets:ro
    environment:
      MYSQL_HOST: db
      REDIS_HOST: redis
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
      MYSQL_DATABASE_FILE: /run/secrets/mysql_db
      MYSQL_USER_FILE: /run/secrets/mysql_user
      PHP_MEMORY_LIMIT: 4096M
      PHP_UPLOAD_LIMIT: 4096M
    depends_on:
      - db
      - redis
    secrets:
      - mysql_password
      - mysql_db
      - mysql_user
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s
    labels:
      traefik.enable: true
      traefik.http.routers.nextcloud.rule: Host(`nextcloud.localhost`)
      traefik.http.routers.nextcloud.entrypoints: web
      # traefik.http.routers.nextcloud.entrypoints: websecure  # HTTPS利用する場合はこちらを有効にする
      # traefik.http.routers.nextcloud.tls.certresolver: router53 # Route53のDNS-01 Challengeを利用する場合はこちらを有効にする
      traefik.http.routers.nextcloud.healthcheck.path: /status.php
    networks:
      - app-network

  whoami:
    image: traefik/whoami
    container_name: whoami
    labels:
      traefik.enable: true
      traefik.http.routers.whoami.rule: Host(`whoami.localhost`)
      traefik.http.routers.whoami.entrypoints: web
      # traefik.http.routers.whoami.entrypoints: websecure  # HTTPS利用する場合はこちらを有効にする
      # traefik.http.routers.whoami.tls.certresolver: router53 # Route53のDNS-01 Challengeを利用する場合はこちらを有効にする
      traefik.http.routers.whoami.middlewares: auth
      traefik.http.middlewares.auth.basicauth.users: traefik:$$apr1$$O.gNZ5Wi$$METL47gzUCYaBQbtNi7WK1
    restart: always
    networks:
      - app-network

  traefik:
    image: traefik:3.1.2
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      # - "443:443/tcp"
    networks:
      - app-network
    environment:
      TZ: Asia/Tokyo
    labels:
      traefik.enable: true
      traefik.http.routers.dashboard.rule: Host(`traefik.localhost`)
      traefik.http.routers.dashboard.entrypoints: web
      traefik.http.routers.dashboard.service: api@internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./log/traefik:/log/traefik
networks:
  app-network:
    external: false

volumes:
  nextcloud:
  db:
  cache:
